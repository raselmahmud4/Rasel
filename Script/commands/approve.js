// ЁЯУБ modules/commands/approve.js

const fs = require("fs-extra"); const path = require("path"); const axios = require("axios"); const request = require("request"); const moment = require("moment-timezone"); const { getPrefix } = global.utils;

const dataPath = path.join(__dirname, "../data/approved.json"); if (!fs.existsSync(dataPath)) fs.writeJsonSync(dataPath, {});

module.exports = { config: { name: "approve", version: "2.0", author: "Rasel Mahmud", countDown: 5, role: 2, shortDescription: "ржЧрзНрж░рзБржк ржЕржирзБржорзЛржжржи ржмрзНржпржмрж╕рзНржерж╛", longDescription: "ржмржЯ ржЪрж╛рж▓рж╛ржирзЛрж░ ржЬржирзНржп ржЧрзНрж░рзБржк ржЕржирзБржорзЛржжржи ржХрж░рзБржи ржмрж╛ ржмрж╛рждрж┐рж▓ ржХрж░рзБржи", category: "admin", guide: { en: "!approve [groupID]\n!approve list\n!approve pending\n!approve del [groupID] [reason]", bn: "!approve [groupID]\n!approve list (ржЕржирзБржорзЛржжрж┐ржд)\n!approve pending (ржЕржкрзЗржХрзНрж╖ржорж╛ржг)\n!approve del [groupID] [ржХрж╛рж░ржг]" } },

onStart: async function ({ api, args, message, event }) { const { threadID, senderID } = event; const prefix = getPrefix(threadID); const approved = fs.readJsonSync(dataPath); const input = args[0];

if (!input) return message.reply(`ЁЯУМ Approve Module Help ЁЯУМ\n

${prefix}approve [groupID]\nтЖТ ржЕржирзБржорзЛржжржи ржжрж┐ржи\n ${prefix}approve list\nтЖТ ржЕржирзБржорзЛржжрж┐ржд рждрж╛рж▓рж┐ржХрж╛\n ${prefix}approve pending\nтЖТ ржЕржкрзЗржХрзНрж╖ржорж╛ржг рждрж╛рж▓рж┐ржХрж╛\n ${prefix}approve del [ID] [ржХрж╛рж░ржг]\nтЖТ ржмрж╛рждрж┐рж▓ ржХрж░рзБржи`);

if (["list", "l"].includes(input)) {
  const approvedGroups = Object.keys(approved);
  if (approvedGroups.length === 0) return message.reply("тЭМ ржХрзЛржирзЛ ржЧрзНрж░рзБржк ржЕржирзБржорзЛржжрж┐ржд ржиржпрж╝ред");

  let listMsg = "=====уАМ тЬЕ ржЕржирзБржорзЛржжрж┐ржд ржЧрзНрж░рзБржкрж╕ржорзВрж╣ уАН=====\n";
  for (let i = 0; i < approvedGroups.length; i++) {
    const gid = approvedGroups[i];
    listMsg += `уАШ${i + 1}уАЩ┬╗ ${approved[gid].name || "Unknown"}\n${gid}\n`;
  }
  return message.reply(listMsg.trim());
}

if (["pending", "p"].includes(input)) {
  const allThreads = global.data.allThreadID || [];
  const pending = allThreads.filter(tid => !approved[tid]);
  if (pending.length === 0) return message.reply("ЁЯОЙ ржХрзЛржирзЛ ржЕржкрзЗржХрзНрж╖ржорж╛ржг ржЧрзНрж░рзБржк ржирзЗржЗред");

  let pendingMsg = "=====уАМ тП│ ржЕржирзБржорзЛржжржирзЗрж░ ржЕржкрзЗржХрзНрж╖рж╛рзЯ ржЧрзНрж░рзБржк уАН=====\n";
  for (let i = 0; i < pending.length; i++) {
    const name = global.data.threadInfo?.[pending[i]]?.threadName || "Unknown";
    pendingMsg += `уАШ${i + 1}уАЩ┬╗ ${name}\n${pending[i]}\n`;
  }
  return message.reply(pendingMsg.trim());
}

if (["del", "d"].includes(input)) {
  const delID = args[1];
  const reason = args.slice(2).join(" ") || "ржХрж╛рж░ржг ржкрзНрж░ржжрж╛ржи ржХрж░рж╛ рж╣рзЯржирж┐ред";
  if (!delID || !approved[delID]) return message.reply("тЭМ ржмрзИржз groupID ржжрж┐ржи ржпрж╛ ржЕржирзБржорзЛржжрж┐ржд ржЖржЫрзЗред");

  delete approved[delID];
  fs.writeJsonSync(dataPath, approved);

  message.reply(`тЬЕ ржЧрзНрж░рзБржк ${delID} ржПрж░ ржЕржирзБржорзЛржжржи ржмрж╛рждрж┐рж▓ рж╣рзЯрзЗржЫрзЗред\nржХрж╛рж░ржг: ${reason}`);
  return api.sendMessage(`тЪая╕П ржЖржкржирж╛рж░ ржЧрзНрж░рзБржкржЯрж┐ ржПржЦржи ржЖрж░ ржЕржирзБржорзЛржжрж┐ржд ржирзЯред\nржмрж╛рждрж┐рж▓рзЗрж░ ржХрж╛рж░ржг: ${reason}`, delID);
}

// Approve process
const targetID = input;
if (approved[targetID]) return message.reply("тЬЕ ржПржЗ ржЧрзНрж░рзБржкржЯрж┐ ржЗрждрж┐ржоржзрзНржпрзЗ ржЕржирзБржорзЛржжрж┐рждред");

const name = global.data.threadInfo?.[targetID]?.threadName || "Unknown";
approved[targetID] = {
  name,
  time: moment().tz("Asia/Dhaka").format("DD-MM-YYYY hh:mm A"),
  approvedBy: senderID
};
fs.writeJsonSync(dataPath, approved);

// nickname change
api.setTitle(`уАО ${prefix} уАПтЗЭ ${global.config.BOTNAME}`, targetID);

// Send welcome message
api.getUserInfo(senderID, async (err, info) => {
  const ownerName = info?.[senderID]?.name || "Owner";

  axios.get("https://anime.apibypriyansh.repl.co/img/anime").then(res => {
    const ext = res.data.url.split(".").pop();
    const filePath = path.join(__dirname, `../cache/welcome.${ext}`);

    const callback = () => {
      api.sendMessage({
        body:

`ЁЯОЙ рж╕рзНржмрж╛ржЧрждржо! ржЖржкржирж╛рж░ ржЧрзНрж░рзБржкржЯрж┐ ржПржЦржи ржерзЗржХрзЗ ${global.config.BOTNAME} ржжрзНржмрж╛рж░рж╛ ржкрж░рж┐ржЪрж╛рж▓рж┐рждред

ЁЯУМ ржмржЯ рж╕ржлрж▓ржнрж╛ржмрзЗ ржХрж╛ржирзЗржХрзНржЯ рж╣рзЯрзЗржЫрзЗ: тФПтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФУ ЁЯФ╣ BOT: ${global.config.BOTNAME} ЁЯФ╕ Prefix: ${prefix} ЁЯСе Total Users: ${global.data.allUserID.length} ЁЯСитАНЁЯСйтАНЁЯСзтАНЁЯСж Total Groups: ${global.data.allThreadID.length} тФЧтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФЫ

ЁЯЫая╕П ржХржорж╛ржирзНржб рж▓рж┐рж╕рзНржЯ ржкрзЗрждрзЗ рж▓рж┐ржЦрзБржи: ${prefix}help

ЁЯСд Approver: ${ownerName}\nЁЯМР fb.com/raselmahmud.q`, attachment: fs.createReadStream(filePath), }, targetID, () => fs.unlinkSync(filePath)); };

request(res.data.url).pipe(fs.createWriteStream(filePath)).on("close", callback);
  });
});

return message.reply(`тЬЕ ржЧрзНрж░рзБржк ${targetID} рж╕ржлрж▓ржнрж╛ржмрзЗ ржЕржирзБржорзЛржжрж┐ржд рж╣рзЯрзЗржЫрзЗ!`);

} };

