const fs = require("fs-extra");
const path = require("path");

const approvedPath = path.join(__dirname, "..", "..", "cache", "duy", "approved.json");
const pendingPath = path.join(__dirname, "..", "..", "cache", "duy", "pending.json");

if (!fs.existsSync(path.dirname(approvedPath))) fs.mkdirSync(path.dirname(approvedPath), { recursive: true });
if (!fs.existsSync(approvedPath)) fs.writeFileSync(approvedPath, JSON.stringify([]));
if (!fs.existsSync(pendingPath)) fs.writeFileSync(pendingPath, JSON.stringify([]));

let approved = JSON.parse(fs.readFileSync(approvedPath));
let pending = JSON.parse(fs.readFileSync(pendingPath));

module.exports.config = {
  name: "duyet",
  version: "1.0.0",
  permission: 2,
  credits: "Rasel Mahmud",
  description: "ржкрзЗржирзНржбрж┐ржВ ржЧрзНрж░рзБржк рж░рж┐ржнрж┐ржЙ ржХрж░рзЗ reply ржПрж░ ржорж╛ржзрзНржпржорзЗ approve/remove ржХрж░рзБржи",
  commandCategory: "system",
  usages: "[duyet] тЖТ рж╕ржм ржкрзЗржирзНржбрж┐ржВ ржЧрзНрж░рзБржк ржжрзЗржЦрж╛ржмрзЗ\n[reply 0] тЖТ ржЕрзНржпрж╛ржкрзНрж░рзБржн ржХрж░ржмрзЗ\n[reply 0 cancel] тЖТ ржмрж╛рждрж┐рж▓ ржХрж░ржмрзЗ",
  cooldowns: 5,
  botNickname: "ЁЯдЦ Magic of Sound"
};

module.exports.handleReply = async function({ handleReply, api, event }) {
  const { threadID, messageID, body } = event;
  const index = parseInt(body.split(" ")[0]);
  const cancel = body.toLowerCase().includes("cancel");
  const target = handleReply.list[index];

  if (!target) return api.sendMessage("тЭМ рж╕ржарж┐ржХ ржирж╛ржорзНржмрж╛рж░ ржжрж┐ржиред", threadID, messageID);

  if (cancel) {
    pending = pending.filter(id => id !== target.threadID);
    fs.writeFileSync(pendingPath, JSON.stringify(pending, null, 2));
    return api.sendMessage(`тЭМ '${target.name}' ржЧрзНрж░рзБржкржЯрж┐ ржмрж╛рждрж┐рж▓ ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗред`, threadID, messageID);
  } else {
    approved.push(target.threadID);
    pending = pending.filter(id => id !== target.threadID);
    fs.writeFileSync(approvedPath, JSON.stringify(approved, null, 2));
    fs.writeFileSync(pendingPath, JSON.stringify(pending, null, 2));

    // тЬЕ ржЕрзНржпрж╛ржкрзНрж░рзБржнржб ржЧрзНрж░рзБржкрзЗ ржЕржЯрзЛ ржорзЗрж╕рзЗржЬ
    await api.sendMessage(
      "ЁЯОЙ Congratulations! This group is now approved.\nЁЯФУ All bot features are now unlocked for this group.",
      target.threadID
    );

    // тЬЕ ржмржЯрзЗрж░ ржирж╛ржо ржЕржЯрзЛ рж╕рзЗржЯ
    await api.changeNickname(module.exports.config.botNickname, target.threadID, api.getCurrentUserID());

    return api.sendMessage(`тЬЕ '${target.name}' ржЧрзНрж░рзБржкржЯрж┐ ржПржЦржи ржЕрзНржпрж╛ржкрзНрж░рзБржнржбред`, threadID, messageID);
  }
};

module.exports.handleEvent = async function({ event, api }) {
  const { threadID, body } = event;

  // Approve ржХржорж╛ржирзНржб ржзрж░рзЗ ржЕрзНржпрж╛ржкрзНрж░рзБржн ржХрж░рзЗ ржжрж╛ржУ (рж╢рзБржзрзБ ржкрзЗржирзНржбрж┐ржВ ржП ржерж╛ржХрж▓рзЗ)
  if (body?.toLowerCase().trim() === "approve" && pending.includes(threadID)) {
    approved.push(threadID);
    pending = pending.filter(id => id !== threadID);
    fs.writeFileSync(approvedPath, JSON.stringify(approved, null, 2));
    fs.writeFileSync(pendingPath, JSON.stringify(pending, null, 2));

    await api.sendMessage(
      "ЁЯОЙ Congratulations! This group is now approved.\nЁЯФУ All bot features are now unlocked for this group.",
      threadID
    );

    await api.changeNickname(module.exports.config.botNickname, threadID, api.getCurrentUserID());

    return;
  }

  // ржирждрзБржи ржЧрзНрж░рзБржк рж╣рж▓рзЗ pending list ржП ржврзЛржХрж╛ржУ
  if (!approved.includes(threadID) && !pending.includes(threadID)) {
    pending.push(threadID);
    fs.writeFileSync(pendingPath, JSON.stringify(pending, null, 2));
    api.sendMessage(
      "тП│ ржПржЗ ржЧрзНрж░рзБржкржЯрж┐ ржкрзЗржирзНржбрж┐ржВ рждрж╛рж▓рж┐ржХрж╛рзЯ ржпрзЛржЧ рж╣рзЯрзЗржЫрзЗред\n" +
      "ржЕржирзБржЧрзНрж░рж╣ ржХрж░рзЗ ржЕржирзБржорзЛржжржирзЗрж░ ржЬржирзНржп ржЕрзНржпрж╛ржбржорж┐ржирзЗрж░ рж╕рж╛ржерзЗ ржпрзЛржЧрж╛ржпрзЛржЧ ржХрж░рзБржиред\n\n" +
      "ЁЯдЦ Bot Name: " + module.exports.config.botNickname + "\n" +
      "ЁЯСд Moderator: Rasel Mahmud",
      threadID
    );
  }
};

module.exports.run = async function({ api, event }) {
  const { threadID, messageID } = event;

  if (pending.length === 0)
    return api.sendMessage("тЪая╕П ржХрзЛржирзЛ ржкрзЗржирзНржбрж┐ржВ ржЧрзНрж░рзБржк ржирзЗржЗред", threadID, messageID);

  let msg = "ЁЯУе ржкрзЗржирзНржбрж┐ржВ ржЧрзНрж░рзБржк рждрж╛рж▓рж┐ржХрж╛:\n";
  const list = [];

  for (let i = 0; i < pending.length; i++) {
    try {
      const info = await api.getThreadInfo(pending[i]);
      const name = info.threadName || "No Name";
      list.push({ threadID: pending[i], name });
      msg += `${i}. ${name} (${pending[i]})\n`;
    } catch {
      msg += `${i}. Unknown (${pending[i]})\n`;
    }
  }

  msg += "\nЁЯСЙ Reply ржХрж░рзЗ ржирж╛ржорзНржмрж╛рж░ рж▓рж┐ржЦрзЗ ржЕрзНржпрж╛ржкрзНрж░рзБржн ржХрж░рзБржи\nЁЯСЙ ржирж╛ржорзНржмрж╛рж░ + cancel рж▓рж┐ржЦрзЗ ржмрж╛рждрж┐рж▓ ржХрж░рзБржи";

  return api.sendMessage(msg, threadID, (err, info) => {
    global.client.handleReply.push({
      name: module.exports.config.name,
      messageID: info.messageID,
      list
    });
  });
};
